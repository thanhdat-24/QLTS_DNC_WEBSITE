
HƯỚNG DẪN TRIỂN KHAI WEB FLASK LÊN INTERNET BẰNG DOCKER + NGINX + SSL (HTTPS)
================================================================================

1. TẠO FILE Dockerfile
-------------------------
Tạo file `Dockerfile` trong thư mục gốc project với nội dung:

```
# Sử dụng Python base image
FROM python:3.9-slim

# Cài đặt thư viện cần thiết
RUN apt-get update && apt-get install -y gcc

# Tạo thư mục trong container
WORKDIR /app

# Copy các file cần thiết
COPY . /app

# Cài đặt các thư viện từ requirements
RUN pip install --upgrade pip
RUN pip install -r requirements.txt

# Khai báo biến môi trường nếu cần
ENV FLASK_APP=app.py
ENV FLASK_ENV=production

# Chạy app bằng Gunicorn
CMD ["gunicorn", "-b", "0.0.0.0:8080", "app:create_app()"]
```

2. BUILD VÀ CHẠY CONTAINER TRÊN LOCAL (nếu cần)
-------------------------------------------------
```
- (Lưu ý: cài đăt docker desktop trên máy thực trước khi chạy 2 lệnh dưới đây)
docker build -t asset-manager .
docker run -d -p 8080:8080 --name asset-manager-container asset-manager
```

3. TRÊN VPS (Ubuntu)
-----------------------
###
### 3.1 Cài Docker:
```
sudo apt update && sudo apt upgrade -y

sudo apt install ca-certificates curl gnupg lsb-release -y

sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
  sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

echo \
  "deb [arch=$(dpkg --print-architecture) \
  signed-by=/etc/apt/keyrings/docker.gpg] \
  https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt update

sudo apt install docker-ce docker-ce-cli containerd.io -y

curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 \
  -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose

```
- Cài đặt Git trên VPS
sudo apt install git -y


### 3.2 Clone project:
```
git clone https://github.com/thanhdat-24/QLTS_DNC_WEBSITE.git
cd QLTS_DNC_WEBSITE
```

### 3.3 Build và run Docker:
```
docker build -t asset-manager .
docker run -d -p 8080:8080 --name asset-manager-container asset-manager
```

4. TRỎ TÊN MIỀN
----------------
Vào trang quản lý tên miền (PaVietNam), tạo bản ghi A:
- Tên: `@` trỏ về IP: `14.225.206.70`
- Tên: `www` trỏ về IP: `14.225.206.70`

5. CÀI NGINX LÀM REVERSE PROXY
-------------------------------
```
sudo apt install nginx -y
```

Tạo file cấu hình:
```
sudo nano /etc/nginx/sites-available/thanhdatdnc.id.vn
```

Nội dung:
```
server {
    listen 80;
    server_name thanhdatdnc.id.vn www.thanhdatdnc.id.vn;

    location / {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

- Sau khi dán xong:
Nhấn Ctrl + O → enter để lưu file
Nhấn Ctrl + X để thoát khỏi trình chỉnh sửa
```

Kích hoạt cấu hình:
```
sudo ln -s /etc/nginx/sites-available/thanhdatdnc.id.vn /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl restart nginx
```

6. CÀI SSL VỚI CERTBOT (HTTPS miễn phí)
----------------------------------------
```
sudo apt install certbot python3-certbot-nginx -y
sudo certbot --nginx -d thanhdatdnc.id.vn -d www.thanhdatdnc.id.vn
```

7. KIỂM TRA WEB HOẠT ĐỘNG
---------------------------
Mở trình duyệt và truy cập:
https://thanhdatdnc.id.vn

DONE! ✅

- Muốn cập nhật web sau khi sửa code thì phải làm gì?

✅ 1. Vào VPS và pull code mới từ GitHub

cd ~/QLTS_DNC_WEBSITE  # hoặc thư mục chứa project của bạn

git pull origin master   # hoặc branch bạn đang dùng

docker build -t asset-manager .
Restart container

- Bạn có thể xóa container cũ và chạy lại:
docker stop asset-manager-container
docker rm asset-manager-container

docker run -d -p 8080:8080 --name asset-manager-container asset-manager